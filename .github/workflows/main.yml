name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.cxx }}-build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [macos-clang, windows-msvc]
        # For Windows msvc, for Linux and macOS let's use the clang compiler, use gcc for Linux.
        include:
          - name: windows-msvc
            os: windows-latest
          - name: macos-clang
            os: macos-latest

    steps:
    - uses: actions/checkout@v1
      with: 
        submodules: true
    
    - uses: lukka/get-cmake@latest
    
    - uses: ilammy/msvc-dev-cmd@v1

    - name: configure
      run: cmake -Bbuilds -DJUCE_BUILD_EXTRAS=OFF -DJUCE_BUILD_EXAMPLES=OFF
    
    - name: build
      run: cmake --build builds --config Release
      
    - name: Upload Windows Artifacts
      if: ${{ runner.os == "Windows"}}
      uses: actions/upload-artifact@v2
      with:
        name: FourierSeries-${{ matrix.os }}
        path: builds/FourierSeries_artefacts/Release/
        
    - name: Upload macOS Artifacts
      if: ${{ runner.os == "macOS"}}
      uses: actions/upload-artifact@v2
      with:
        name: FourierSeries-${{ matrix.os }}
        path: builds/FourierSeries_artefacts/Fourier Series.app
